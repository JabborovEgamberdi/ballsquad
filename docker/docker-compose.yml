version: '3.8'

services:

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/authorsdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
    volumes:
      - app_data:/data
    depends_on:
      - mysqldb
    networks:
      - app-network

  mysqldb:
    container_name: mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: authorsdb
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - app-network

  otel-collector:
    container_name: otlp
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # OTLP gRPC receiver
    networks:
      - app-network

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=19411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 19411:19411
    networks:
      - app-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./prometheus_data:/prometheus_data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus_data'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      - app-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password1
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml
    depends_on:
      - jaeger
      - prometheus
    networks:
      - app-network

volumes:
  app_data:
  mysql:

networks:
  app-network:
    driver: bridge